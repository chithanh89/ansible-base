---
# tasks file for redis
- name: create sentinel working directory
  file:
    path: "{{ redis_sentinel_dir }}"
    state: directory
    recurse: yes
    owner: "{{ redis_user }}"

- name: check if sentinel log directory exists
  stat:
    path: "{{ redis_sentinel_logfile|dirname }}"
  register: sentinel_logdir
  changed_when: false
  when: redis_sentinel_logfile != '""' and ansible_os_family == 'Debian'

# Check then create log dir to prevent aggressively overwriting permissions
- name: create sentinel log directory if it does not exist
  file:
    state: directory
    path: "{{ redis_sentinel_logfile|dirname }}"
    owner: "{{ redis_user }}"
    group: "{{ redis_group }}"
  when:
    - ansible_os_family == 'Debian'
    - redis_sentinel_logfile != '""'
    - not sentinel_logdir.stat.exists

- name: touch the sentinel log file
  file:
    state: touch
    path: "{{ redis_sentinel_logfile }}"
    owner: "{{ redis_user }}"
    group: "{{ redis_group }}"
  when: redis_sentinel_logfile != '""' and ansible_os_family == 'Debian'

- name: check if sentinel pid directory exists
  stat:
    path: "{{ redis_sentinel_pidfile|dirname }}"
  register: sentinel_piddir
  changed_when: false
  when: redis_sentinel_pidfile != '""' and ansible_os_family == 'Debian'

- name: create sentinel pid directory if it does not exist
  file:
    state: directory
    path: "{{ redis_sentinel_pidfile|dirname }}"
    owner: "{{ redis_user }}"
    group: "{{ redis_group }}"
    mode: 0755
  when:
    - ansible_os_family == 'Debian'
    - redis_sentinel_pidfile != '""'
    - not sentinel_piddir.stat.exists

- name: create sentinel config file
  template:
    src: redis-sentinel.conf.j2
    dest: "{{redis_conf_dir}}/redis-sentinel.conf"
    owner: "{{ redis_user }}"
    mode: 0644

- name: create sentinel systemd service
  template:
    src: redis-sentinel.service.j2
    dest: "{{redis_service_dir}}/redis-sentinel.service"
    mode: 0644
  register: sentinel_unit_file
  when: ansible_os_family == 'Debian'
  notify: restart redis-sentinel

- name: Make sure Redis-sentinel service is running
  systemd:
    daemon_reload: yes
    state: restarted
    name: redis-sentinel
    enabled: yes
